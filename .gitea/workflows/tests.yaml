name: Tests
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
  workflow_dispatch:
env:
  ACTIONLINT_LATEST_VERSION: 1.7.7
permissions: {}
defaults:
  run:
    shell: bash
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: "npm"
          cache-dependency-path: "package-lock.json"
          node-version: 20
      - name: Restore node_modules from cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ runner.arch }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-node_modules-
      - name: Install dependencies with npm
        run: npm ci
  build:
    name: Build
    needs: setup
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: "npm"
          cache-dependency-path: "package-lock.json"
          node-version: 20
      - name: Restore node_modules from cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ runner.arch }}-node_modules-${{ hashFiles('package-lock.json') }}
          fail-on-cache-miss: true
      - name: Build action
        run: npm run build
      - name: Check for modified/untracked files
        run: git add . && git diff-index --exit-code HEAD --
  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: "npm"
          cache-dependency-path: "package-lock.json"
          node-version: 20
      - name: Restore node_modules from cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ runner.arch }}-node_modules-${{ hashFiles('package-lock.json') }}
          fail-on-cache-miss: true
      - name: Run prettier
        run: npx prettier --check .
      - name: Run eslint
        run: npx eslint .
  integration_tests:
    name: Integration tests
    needs: setup
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: "npm"
          cache-dependency-path: "package-lock.json"
          node-version: 20
      - name: Restore node_modules from cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: "node_modules"
          key: ${{ runner.os }}-${{ runner.arch }}-node_modules-${{ hashFiles('package-lock.json') }}
          fail-on-cache-miss: true
      - name: Run action without arguments
        id: run_action_without_args
        uses: ./
      - name: Verify the action output
        env:
          CACHE_HIT: ${{ steps.run_action_without_args.outputs.cache-hit }}
          VERSION: ${{ steps.run_action_without_args.outputs.version }}
        run: |
          [ "$CACHE_HIT" = "false" ] || [ "$CACHE_HIT" = "true" ]
          [ "$VERSION" = "${{ env.ACTIONLINT_LATEST_VERSION }}" ]
      - name: Run action with latest version
        id: run_action_with_latest
        uses: ./
        with:
          version: latest
      - name: Verify the action output
        env:
          CACHE_HIT: ${{ steps.run_action_with_latest.outputs.cache-hit }}
          VERSION: ${{ steps.run_action_with_latest.outputs.version }}
        run: |
          [ "$CACHE_HIT" = "true" ]
          [ "$VERSION" = "${{ env.ACTIONLINT_LATEST_VERSION }}" ]
      - name: Run action with specific version
        id: run_action_with_specific_version
        uses: ./
        with:
          version: ${{ env.ACTIONLINT_LATEST_VERSION }}
      - name: Verify the action output
        env:
          CACHE_HIT: ${{ steps.run_action_with_specific_version.outputs.cache-hit }}
          VERSION: ${{ steps.run_action_with_specific_version.outputs.version }}
        run: |
          [ "$CACHE_HIT" = "true" ]
          [ "$VERSION" = "${{ env.ACTIONLINT_LATEST_VERSION }}" ]
      - name: Check workflow files with actionlint
        run: actionlint --color --verbose
